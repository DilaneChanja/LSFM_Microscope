<?xml version="1.0" encoding="utf-8"?><DEFECTS><DEFECT>
    <SFA>
      <FILEPATH>C:\LSFM_Software\LSFM_LIbrary_Test\TreiberImplementierung (2)\TreiberImplementierung\TreiberImplementierung\include\</FILEPATH>
      <FILENAME>file12.cpp</FILENAME>
      <LINE>618</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetischer Überlauf: Wenn Sie den Operator "*" für einen 4-Bytewert verwenden und das Ergebnis in einen 8-Bytewert umwandeln, wandeln Sie den Wert in den breiteren Typ um, bevor Sie den Operator "*" verwenden, um einen Überlauf zu vermeiden (io.2).</DESCRIPTION>
    <FUNCTION>store_fits_exp</FUNCTION>
    <DECORATED>?store_fits_exp@@YAHPEADHHPEAXH@Z</DECORATED>
    <FUNCLINE>555</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\LSFM_Software\LSFM_LIbrary_Test\TreiberImplementierung (2)\TreiberImplementierung\TreiberImplementierung\include\</FILEPATH>
      <FILENAME>file12.cpp</FILENAME>
      <LINE>701</LINE>
      <COLUMN>46</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetischer Überlauf: Wenn Sie den Operator "*" für einen 4-Bytewert verwenden und das Ergebnis in einen 8-Bytewert umwandeln, wandeln Sie den Wert in den breiteren Typ um, bevor Sie den Operator "*" verwenden, um einen Überlauf zu vermeiden (io.2).</DESCRIPTION>
    <FUNCTION>store_fits</FUNCTION>
    <DECORATED>?store_fits@@YAHPEADHHHPEAX@Z</DECORATED>
    <FUNCLINE>640</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\LSFM_Software\LSFM_LIbrary_Test\TreiberImplementierung (2)\TreiberImplementierung\TreiberImplementierung\</FILEPATH>
      <FILENAME>LSFM_Camera.cpp</FILENAME>
      <LINE>284</LINE>
      <COLUMN>16</COLUMN>
    </SFA>
    <DEFECTCODE>26451</DEFECTCODE>
    <DESCRIPTION>Arithmetischer Überlauf: Wenn Sie den Operator "-" für einen 4-Bytewert verwenden und das Ergebnis in einen 8-Bytewert umwandeln, wandeln Sie den Wert in den breiteren Typ um, bevor Sie den Operator "-" verwenden, um einen Überlauf zu vermeiden (io.2).</DESCRIPTION>
    <FUNCTION>LSFM_Camera::GetAndSave_Image</FUNCTION>
    <DECORATED>?GetAndSave_Image@LSFM_Camera@@QEAA_NPEAD@Z</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\LSFM_Software\LSFM_LIbrary_Test\TreiberImplementierung (2)\TreiberImplementierung\TreiberImplementierung\</FILEPATH>
      <FILENAME>LSFM_Camera.cpp</FILENAME>
      <LINE>220</LINE>
      <COLUMN>14</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>Der Enumerationstyp "PhaseNumber" umfasst keine Bereichseinschränkung. Geben Sie "enum class" Vorrang vor "enum" (Enum.3).</DESCRIPTION>
    <FUNCTION>LSFM_Camera::GetAndSave_Image</FUNCTION>
    <DECORATED>?GetAndSave_Image@LSFM_Camera@@QEAA_NPEAD@Z</DECORATED>
    <FUNCLINE>129</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\LSFM_Software\LSFM_LIbrary_Test\TreiberImplementierung (2)\TreiberImplementierung\TreiberImplementierung\</FILEPATH>
      <FILENAME>LSFM_Camera.cpp</FILENAME>
      <LINE>862</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26812</DEFECTCODE>
    <DESCRIPTION>Der Enumerationstyp "PhaseSymmetry" umfasst keine Bereichseinschränkung. Geben Sie "enum class" Vorrang vor "enum" (Enum.3).</DESCRIPTION>
    <FUNCTION>LSFM_Camera::SetFlimPhaseSequenceParameter</FUNCTION>
    <DECORATED>?SetFlimPhaseSequenceParameter@LSFM_Camera@@UEAA_NW4PhaseNumber@@W4PhaseSymmetry@@W4PhaseOrder@@W4TapSelect@@@Z</DECORATED>
    <FUNCLINE>862</FUNCLINE>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\LSFM_Software\LSFM_LIbrary_Test\TreiberImplementierung (2)\TreiberImplementierung\TreiberImplementierung\</FILEPATH>
      <FILENAME>Component.h</FILENAME>
      <LINE>16</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Die Variable "Component::controllerStage" ist nicht initialisiert. Eine Membervariable muss immer initialisiert werden (type.6).</DESCRIPTION>
    <FUNCTION>Component::{ctor}</FUNCTION>
    <DECORATED>??0Component@@QEAA@XZ</DECORATED>
    <FUNCLINE>16</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>Component::controllerStage</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\LSFM_Software\LSFM_LIbrary_Test\TreiberImplementierung (2)\TreiberImplementierung\TreiberImplementierung\</FILEPATH>
      <FILENAME>LSFM_Camera.h</FILENAME>
      <LINE>131</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Die Variable "LSFM_Camera::tapSelect" ist nicht initialisiert. Eine Membervariable muss immer initialisiert werden (type.6).</DESCRIPTION>
    <FUNCTION>LSFM_Camera::{ctor}</FUNCTION>
    <DECORATED>??0LSFM_Camera@@QEAA@XZ</DECORATED>
    <FUNCLINE>131</FUNCLINE>
    <ADDITIONALINFO>
      <targetSymbol>LSFM_Camera::tapSelect</targetSymbol>
    </ADDITIONALINFO>
    <PATH></PATH>
  </DEFECT><DEFECT>
    <SFA>
      <FILEPATH>C:\LSFM_Software\LSFM_LIbrary_Test\TreiberImplementierung (2)\TreiberImplementierung\TreiberImplementierung\</FILEPATH>
      <FILENAME>TreiberImplementierung.cpp</FILENAME>
      <LINE>232</LINE>
      <COLUMN>11</COLUMN>
    </SFA>
    <DEFECTCODE>6273</DEFECTCODE>
    <DESCRIPTION>Eine Nichtganzzahl wurde als _Param_(3) übergeben. Im Aufruf von "sprintf_s" ist jedoch eine Ganzzahl erforderlich. Tatsächlicher Typ: "double". Wenn ein Zeigerwert übergeben wird, sollte %p verwendet werden.</DESCRIPTION>
    <FUNCTION>NormalModeImageSequence</FUNCTION>
    <DECORATED>?NormalModeImageSequence@@YAXPEBDHV?$vector@NV?$allocator@N@std@@@std@@111@Z</DECORATED>
    <FUNCLINE>224</FUNCLINE>
    <PATH></PATH>
  </DEFECT></DEFECTS>